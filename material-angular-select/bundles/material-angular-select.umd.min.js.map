{"version":3,"sources":["ng://material-angular-select/lib/material-angular-select.component.ts","ng://material-angular-select/lib/material-angular-select.module.ts"],"names":["MaterialAngularSelectComponent","changeDetector","this","data","label","name","fixHeight","isFloatingLabel","disabled","arrow","keys","value","title","currentValue","_a","selectedValue","EventEmitter","opened","isFocused","dataArray","isViewInit","todoAfterInit","arrowkeyLocation","isKeyNavigation","prototype","ngOnInit","id","Math","round","random","detach","ngOnChanges","changes","_this","hasOwnProperty","classStyle","forEach","style","dropdown","nativeElement","classList","add","loadData","push","bind","setCurrentValue","setSelectedItem","replace","componentHandler","upgradeElements","item","length","ngAfterViewInit","func","call","detectChanges","reattach","menuKeyDown","event","stopImmediatePropagation","stopPropagation","preventDefault","isVisible","menu","parentElement","contains","keyCode","closeMenu","openMenu","keyDownTab","onInputClick","e","hideAllMenu","findIndex","show","document","querySelectorAll","select","querySelector","hide","emit","MaterialTextfield","change","setTimeout","updateClasses_","evt","createEvent","initEvent","input","dispatchEvent","fireEvent","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","Input","Output","ViewChild","ViewChildren","MaterialAngularSelectModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import 'material-design-lite/material';\n\ndeclare var componentHandler: any;\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'material-angular-select', // tslint:disable-line\n  styleUrls: ['./material-angular-select.component.scss'],\n  templateUrl: './material-angular-select.component.html',\n  encapsulation: ViewEncapsulation.None, // tslint:disable-line\n})\n\nexport class MaterialAngularSelectComponent implements OnInit, OnChanges, AfterViewInit {\n  @Input() public data: any[] = [];\n  @Input() public label = '';\n  @Input() public name = '';\n  @Input() public fixHeight = false;\n  @Input() public isFloatingLabel = true;\n  @Input() public disabled = false;\n  @Input() public classStyle: string[];\n  @Input() public arrow = true;\n  @Input() public keys = { // required if use array of object with different structure\n    value: 'value',\n    title: 'title',\n  };\n  @Input() public currentValue = {\n    [this.keys.title]: '',\n    [this.keys.value]: '',\n  };\n\n  @Output() public selectedValue = new EventEmitter();\n\n  public id: string;\n\n  @ViewChild('dropdown') dropdown: ElementRef;\n  @ViewChild('input') input: ElementRef;\n  @ViewChild('hiddenInput') hiddenInput: ElementRef;\n  @ViewChild('menu') menu: ElementRef;\n  @ViewChildren('li') list: QueryList<ElementRef>;\n\n  private opened = false;\n  public isFocused = false;\n  public dataArray = [];\n  private isViewInit = false;\n  private todoAfterInit = [];\n  public arrowkeyLocation = 0;\n  public isKeyNavigation = false;\n\n  public constructor(private changeDetector: ChangeDetectorRef) {\n\n  }\n\n  public ngOnInit() {\n    this.id = `id-${this.name}-${Math.round(Math.random() * 100 + 100)}`;\n    this.changeDetector.detach();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('classStyle')) {\n      changes.classStyle.currentValue.forEach((style) => {\n        this.dropdown.nativeElement.classList.add(style);\n      });\n    }\n\n    if (changes.hasOwnProperty('data')) {\n      if (!this.isViewInit) {\n        this.todoAfterInit.push(this.loadData.bind(this));\n      } else {\n        this.loadData();\n      }\n    }\n\n    if (changes.hasOwnProperty('currentValue')) {\n      if (!this.isViewInit) {\n        this.todoAfterInit.push(this.setCurrentValue.bind(this, changes.currentValue.currentValue));\n      } else {\n        this.setCurrentValue(changes.currentValue.currentValue);\n        this.setSelectedItem(this.currentValue);\n      }\n    }\n\n    if (!changes.hasOwnProperty('name')) {\n      this.name = (this.name === '') ? this.label.replace(/\\s/g, '') : this.name;\n    }\n    componentHandler.upgradeElements(this.dropdown.nativeElement);\n  }\n\n  private setCurrentValue(item) {\n    if (!item) {\n      return;\n    }\n    if (typeof item === 'string') {\n      this.currentValue = {\n        [this.keys.value]: item,\n        [this.keys.title]: item,\n      };\n    } else {\n      this.currentValue = item;\n    }\n  }\n\n  private loadData() {\n    if (this.data.length > 0) {\n      if (typeof this.data[0] === 'string') {\n        this.dataArray = [];\n        this.data.forEach((item) => {\n          this.dataArray.push({\n            [this.keys.value]: item,\n            [this.keys.title]: item,\n          });\n        });\n      }\n      if (typeof this.data[0] === 'object') {\n        this.dataArray = this.data;\n      }\n    }\n    this.disabled = this.dataArray.length < 1 || this.disabled;\n  }\n\n  public ngAfterViewInit() {\n    this.isViewInit = true;\n    this.todoAfterInit.forEach(func => func.call());\n    this.todoAfterInit = [];\n    this.setSelectedItem(this.currentValue);\n    this.changeDetector.detectChanges();\n    this.changeDetector.reattach();\n  }\n\n  public menuKeyDown(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n    event.preventDefault();\n\n    this.isKeyNavigation = true;\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    switch (event.keyCode) {\n      case 38: // arrow up\n        this.arrowkeyLocation = this.arrowkeyLocation > 0 ? this.arrowkeyLocation - 1 : this.dataArray.length - 1;\n        break;\n      case 40: // arrow down\n        this.arrowkeyLocation = this.arrowkeyLocation >= (this.dataArray.length - 1) ? 0 : this.arrowkeyLocation + 1;\n        break;\n      case 13: // enter\n        if (isVisible) {\n          this.setCurrentValue(this.data[this.arrowkeyLocation]);\n          this.closeMenu();\n        } else {\n          this.openMenu();\n        }\n        break;\n      case 27: // esc\n        this.closeMenu();\n        break;\n    }\n  }\n\n  public keyDownTab(event) {\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    switch (event.keyCode) {\n      case 9: // tab\n        if (isVisible) {\n          this.closeMenu();\n        }\n        break;\n    }\n  }\n\n  public onInputClick(e) {\n    e.stopPropagation();\n    if (this.disabled) {\n      return;\n    }\n\n    const isVisible = this.menu.nativeElement.parentElement.classList.contains('is-visible');\n    this.hideAllMenu();\n    if (!isVisible) {\n      this.openMenu();\n    } else {\n      this.isFocused = false;\n      this.opened = false;\n    }\n  }\n\n  private openMenu() {\n    this.arrowkeyLocation = this.dataArray.findIndex(item => item[this.keys.value] === this.currentValue[this.keys.value]);\n    this.menu.nativeElement['MaterialMenu'].show();\n    this.isFocused = true;\n    this.opened = true;\n  }\n\n  private closeMenu() {\n    this.hideAllMenu();\n    this.isFocused = false;\n    this.opened = false;\n  }\n\n  private hideAllMenu() {\n    const allSelects = document.querySelectorAll('.material-angular-select') as any;\n    allSelects.forEach((select: HTMLElement) => {\n      const menu = select.querySelector('.mdl-js-menu');\n      menu['MaterialMenu'].hide();\n    });\n  }\n\n  public setSelectedItem(item) {\n    if (!item) {\n      return;\n    }\n    this.currentValue = item;\n    this.selectedValue.emit(item);\n    this.dropdown.nativeElement.MaterialTextfield.change(this.currentValue[this.keys.title]); // handles css class changes\n    setTimeout(() => {\n      this.dropdown.nativeElement.MaterialTextfield.updateClasses_(); // update css class\n    },\n               250);\n\n    if ('createEvent' in document) {\n      const evt = document.createEvent('HTMLEvents');\n      evt.initEvent('change', false, true);\n      this.menu.nativeElement['MaterialMenu'].hide();\n      this.input.nativeElement.dispatchEvent(evt);\n    } else {\n      this.input.nativeElement.fireEvent('onchange');\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialAngularSelectComponent } from './material-angular-select.component';\n\n@NgModule({\n  declarations: [MaterialAngularSelectComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [MaterialAngularSelectComponent],\n})\nexport class MaterialAngularSelectModule { }\n"]}